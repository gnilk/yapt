<yapt2>
	<resources>
  		<object class="System.Config" name="Config">
			<property name="screen.resolution.width">640</property>
			<property name="screen.resolution.height">360</property>
		</object>

		<object class="geom.PointCloud" name="data.starfield">
			<property name="numVertex">256</property>
			<property name="range">1.0, 1.0, 1.0</property>
		</object>

		<object class="geom.Cube" name="data.tvbox">
			<property name="scale">1.0, 1.0, 1.0</property>
			<property name="generatequads">true</property>
			<property name="generatelines">false</property>
		</object>
	</resources>
	
	<render>
		<object class="utils.Container" name="part_tvbox">
			<object class="gl.RenderToTexture" name="tvbox_starfield">
				<property name="fov">35.0</property>
				<property name="width">128</property>
				<property name="height">128</property>

				<object class="gl.Camera" name="camera">
					<property name="position">0,0,-4</property>
					<!-- <property name="position">0,0,2.0</property> -->
					<property name="target">0,0,0</property>
					<property name="upvector">0,1,0</property>
				</object>

				<object class="Animation.ExpSolver" name="x_move.starfield">
					<property name="expression">t</property>
				</object>

				<object class="enigma.Starfield" name="move.starfield">
					<property name="numSrcVertex" source="data.starfield.vertexCount" />
					<property name="srcVertexData" source="data.starfield.vertexData" />
					<property name="range">1</property>
					<property name="x_movement" source="x_move.starfield" />
				</object>

				<object class="gl.DrawPoints" name="render_drawstars">
					<property name="vertexCount" source="move.starfield.vertexCount" />
					<property name="vertexData" source="move.starfield.vertexData" />
					<property name="vertexShader">enigma_plotball.vtx.glsl</property>
					<property name="fragmentShader">enigma_intro.frag.glsl</property>				
				</object>		
			</object>

			<!-- just fake, this should be proper vectorized stuff -->

			<object class="gl.RenderToTexture" name="tvbox_side1">
				<property name="fov">35.0</property>
				<property name="clear">true</property>
				<property name="width">64</property>
				<property name="height">64</property>				
				<object class="gl.Camera" name="camera">
					<property name="position">0,0,-4</property>
					<property name="target">0,0,0</property>
					<property name="upvector">0,1,0</property>
				</object>
				<object class="Animation.VectorExpression" name="side1.rotation">
					<property name="x">0</property>
					<property name="y">0</property>
					<property name="z">t*64</property>
				</object>

				<object class="gl.Transform" name="prs_side1">
					<property name="rotation" source="side1.rotation" />
				</object>


				<object class="gl.DrawText" name="printtext">
					<property name="font">Army.ttf</property>
					<property name="fontsize">32</property>
					<property name="alignment">center</property>
					<property name="position">0,-0.1,0</property>
					<property name="text">PHA</property>
				</object>
			</object>





			<object class="gl.RenderToTexture" name="tvbox_main_target">
				<property name="fov">35.0</property>
				<property name="width">640</property>
				<property name="height">360</property>

				<object class="Animation.ExpSolver" name="rotspeed">
					<property name="expression">40 * t + (sin(t))</property>
				</object>

				<object class="gl.Camera" name="camera">
					<property name="position">0,0,6</property>
					<!-- <property name="position">0,0,2.0</property> -->
					<property name="target">0,0,0</property>
					<property name="upvector">0,1,0</property>
				</object>

				<object class="Animation.ExpSolver" name="plotball.bounce.y">
					<property name="expression">abs(cos(t*2.0))-0.3</property>
				</object>

				<object class="Numeric.VectorMux" name="plotball.bounce.position">
					<property name="x">0</property>
					<property name="y" source="plotball.bounce.y" />
					<property name="z">0</property>
				</object>

				<object class="Animation.VectorExpression" name="plotball.rotation">
					<property name="x">t*64</property>
					<property name="y">t*-48</property>
					<property name="z">t*32</property>
				</object>


				<object class="gl.Transform" name="prs_ball">
					<property name="position" source="plotball.bounce.position" />
					<property name="rotation" source="plotball.rotation" />
				</object>

				<object class="gl.ShaderQuad">
					<property name="depthwrite">false</property>
					<property name="pixelshader">enigma_bgballs.frag.glsl</property>
					<property name="vertexshader">enigma_bgballs.vtx.glsl</property>
				</object>

				<object class="enigma.RenderTVBox" name="render_ball">
					<property name="vertexCount" source="data.tvbox.vertexCount" />
					<property name="vertexData" source="data.tvbox.vertexData" />
					<property name="quadCount" source="data.tvbox.quadCount" />
					<property name="quadData" source="data.tvbox.quadData" />
					<property name="tex0" source="tvbox_starfield.texture" />
					<property name="tex1" source="tvbox_side1.texture" />
					<property name="tex2" source="tvbox_starfield.texture" />
					<property name="tex3" source="tvbox_starfield.texture" />
					<property name="tex4" source="tvbox_starfield.texture" />
					<property name="tex5" source="tvbox_starfield.texture" />
				</object>

			</object>

			<object class="gl.RenderContext" name="render_to_screen">
				<object class="gl.FullScreenImage" name="feedback">
					<property name="texture" source="tvbox_main_target.texture"/>
					<!-- <property name="texture" source="tvbox_starfield.texture"/> -->
				</object>		

			</object>
		</object>
	</render>
	
	<timeline>
	   <!-- <execute start="0" duration="1000" object="fscreen" /> -->
	   <execute start="0" duration="1000" object="part_tvbox" />
	</timeline>
</yapt2>				
