<yapt2>
	<resources>
  		<object class="System.Config" name="Config">
			<property name="screen.resolution.width">640</property>
			<property name="screen.resolution.height">360</property>
		</object>

 		<object class="gl.LoadTexture2D" name="texture1">
	       <property name="fileName">texture.tga</property>
	   </object>
	  <object class="geom.Triangle" name="tri">
	</object>
	</resources>
	
	<render>
		<object class="gl.RenderContext" name="mycontext">

			<object class="Numeric.VectorMux" name="campos">
				<property name="x" source="campos_x"/>
				<property name="y">0</property>
				<property name="z" source="campos_z"/>
			</object>
			<object class="gl.Camera" name="camera">
				<property name="position" source="campos" />
				<property name="target">0,0,0</property>
				<property name="upvector">0,1,0</property>
			</object>
			<object class="Animation.ExpSolver" name="rotspeed">
				<property name="expression">40 * t + (sin(t))</property>
			</object>
			<object class="gl.DrawTriangle" name="triangle">
				<property name="numIndex" source="tri.numIndex"/>
				<property name="indexData" source="tri.indexData"/>
				<property name="vertexData" source="tri.vertexData"/>
				<property name="speed" source="rotspeed" />
			</object>

			<object class="Animation.ExpSolver" name="campos_x">
				<property name="expression">3*sin(t)</property>
			</object>
			<object class="Animation.ExpSolver" name="campos_z">
				<property name="expression">3*cos(t*0.5)</property>
			</object>
			<object class="Animation.GenericCurve" name="TestSpline">
				<property name="channels">3</property>
				<property name="type">hold</property>
				<property name="vector">1.000,3.00,6.000</property>
			</object>

<!--
			<object class="gl.FullScreenImage" name="feedback">
			 <property name="texture" source="previous"/> 
			</object>		
-->
			<object class="gl.FullScreenImage" name="fscreen">
			 <property name="texture" source="texture1"/> 
			</object>		
		
		</object>
		<!-- Take a copy of the context and store for next frame 
		    'allowRefUpdates' disables circular dependency updates
            Anybody referencing this effect will not force an update
        -->
        <object class="gl.RenderContext" name="previous" allowRefUpdate="false">
			<object class="gl.FullScreenImage" name="fscreen">
			 <property name="color">0.25,0.25,0.25,0.25</property>
			 <property name="texture" source="texture1"/> 
			</object>		
        </object>
	</render>
	
	<timeline>
	   <!-- <execute start="0" duration="1000" object="fscreen" /> -->
	   <execute start="0" duration="1000" object="mycontext" />
	</timeline>
</yapt2>				
