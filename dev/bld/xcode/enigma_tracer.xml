<yapt2>
	<resources>
  		<object class="System.Config" name="Config">
			<property name="screen.resolution.width">640</property>
			<property name="screen.resolution.height">360</property>
		</object>

		<object class="geom.Quad" name="data.logo.quad">
			<property name="scale">1.075, 0.15, 1.0</property>
			<property name="generatequads">true</property>
			<property name="generatelines">false</property>
		</object>

		<object class="geom.Quad" name="data.tracer.quad">
			<property name="scale">1.075, 0.5, 1.0</property>
			<property name="generatequads">true</property>
			<property name="generatelines">false</property>
		</object>

 		<object class="gl.LoadTexture2D" name="data.logo">
	       <property name="fileName">Phenomena_Logo.png</property>
	   	</object>

	</resources>
	
	<render>
		<!-- Container is just a dummy, makes linking easier -->
		<object class="utils.Container" name="render">

			<!-- Trace the balls and fractal to a texture -->
			<object class="gl.RenderToTexture" name="tracer_target">
				<property name="fov">35.0</property>
				<property name="width">640</property>
				<property name="height">360</property>					
				<property name="clear">true</property>


				<!-- not quite sure what these guys are doing -->
				<object class="Animation.ExpSolver" name="sphere_pos_x">
					<property name="expression">4 * sin(t)</property>
				</object>
				<object class="Animation.ExpSolver" name="sphere_pos_z">
					<property name="expression">8 + 4 * cos(t)</property>
				</object>
				<object class="Numeric.VectorMux" name="sphere_pos">
					<property name="x" source="sphere_pos_x"/>
					<property name="y">0</property>
					<property name="z" source="sphere_pos_z"/>
				</object>
				<object class="Numeric.VectorMux" name="sphere_pos2">
					<property name="x">0</property>
					<property name="y"  source="sphere_pos_x"/>
					<property name="z">4</property>
				</object>
				<object class="gl.ShaderQuad">
					<property name="pixelshader">enigma_balltrace.glsl</property>
					<property name="vertexshader">vshader.glsl</property>
				</object>
			</object>

			<!-- render to textures done, now compose screen -->
			<object class="gl.RenderToTexture" name="tracer.composed_screen">
				<property name="fov">35.0</property>
				<property name="width">640</property>
				<property name="height">360</property>

				<!-- output tracer first -->
				<object class="gl.RenderContext" name="tracer">
					<property name="fov">35.0</property>
					<property name="clear">true</property>

					<object class="gl.PreserveState">
						<object class="gl.Camera" name="camera">
							<property name="position">0,0,2</property>
							<!-- <property name="position">0,0,2.0</property> -->
							<property name="target">0,0,0</property>
							<property name="upvector">0,1,0</property>
						</object>
						<object class="gl.Transform" name="prs_ball">
							<property name="position">0,0,0</property>
							<property name="rotation">0,0,0</property>
							<property name="scale">1.,-0.9,1</property>
						</object>

						<object class="gl.DrawQuads" name="render_tracer">
							<property name="vertexCount" source="data.tracer.quad.vertexCount" />
							<property name="vertexData" source="data.tracer.quad.vertexData" />
							<property name="vertexUVData" source="data.tracer.quad.vertexUVData" />
							<property name="quadCount" source="data.tracer.quad.quadCount" />
							<property name="quadData" source="data.tracer.quad.quadData" />
							<property name="ignoreZBuffer">true</property>
							<property name="cullface">false</property>
							<!-- <property name="wireframe">true</property> -->
							<property name="texture" source="tracer_target.texture" />
							<property name="lighting">false</property>
						</object>
					</object>
				</object>
				<!-- draw logo -->
				<object class="gl.RenderContext" name="logo">
					<property name="fov">35.0</property>
					<property name="clear">false</property>
		
					<object class="gl.PreserveState">
						<object class="gl.Camera" name="camera">
							<property name="position">0,0,2</property>
							<!-- <property name="position">0,0,2.0</property> -->
							<property name="target">0,0,0</property>
							<property name="upvector">0,1,0</property>
						</object>
						<object class="gl.Transform" name="prs_ball">
							<property name="position">0,0.45,0.1</property>
							<property name="rotation">0,0,0</property>
						</object>

						<object class="gl.DrawQuads" name="render_logo">
							<property name="vertexCount" source="data.logo.quad.vertexCount" />
							<property name="vertexData" source="data.logo.quad.vertexData" />
							<property name="vertexUVData" source="data.logo.quad.vertexUVData" />
							<property name="quadCount" source="data.logo.quad.quadCount" />
							<property name="quadData" source="data.logo.quad.quadData" />
							<property name="ignoreZBuffer">true</property>
							<!-- <property name="wireframe">true</property> -->
							<property name="texture" source="data.logo.texture" />
							<property name="lighting">false</property>
						</object>
					</object>
				</object>

				<!-- draw scroller -->
				<object class="gl.RenderContext" name="drawtext">
					<property name="fov">35.0</property>
					<property name="clear">false</property>
					<object class="gl.Camera" name="camera">
						<property name="position">0,0,-4</property>
						<property name="target">0,0,0</property>
						<property name="upvector">0,1,0</property>
					</object>

					<object class="Animation.ExpSolver" name="text1.alpha">
						<property name="expression">1</property>
					</object>
					<object class="Animation.VectorExpression" name="text1.scrollpos">
						<property name="x">2+-1*t</property>
						<property name="y">-0.75</property>
						<property name="z">0</property>
					</object>
					<object class="gl.TextScroll" name="scroller">
						<property name="font">fontmap_cful.fnt</property>
						<property name="fontsize">32</property>
						<property name="alignment">none</property>
						<property name="position" source="text1.scrollpos" />
						<property name="text">     DO WE HAVE YOUR ATTENTION...   WE JUST ADDED SOME 20TH CENTURY UPGRADES TO IT...    HOPE YOU LIKE THIS DEMO</property>
						<property name="useblend">true</property>
						<property name="color">1.0, 1.0, 1.0, 1.0</property>					
					</object>
				</object>
			</object>
			<object class="gl.RenderContext" name="render_to_screen">				
				<object class="gl.FullScreenImage" name="feedback">
					<property name="texture" source="tracer.composed_screen.texture"/>
				</object>		

			</object>

		</object>   <!-- end of container -->
	</render>

	<!-- this timeline makes it possible to run the XML standalone, it is discarded when included -->	
	<timeline>
	   <execute start="0" duration="10000" object="render" />
	</timeline>
</yapt2>				
